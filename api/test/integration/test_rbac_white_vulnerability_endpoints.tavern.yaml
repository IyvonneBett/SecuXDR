
---
test_name: GET /vulnerability/{agent_id}

stages:

  - name: Try to get vulnerabilities information for agent 001
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/vulnerability/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response: &permission_denied
      status_code: 403
      json:
        error: 4000

  - name: Get vulnerabilities information for agent 002
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/vulnerability/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

---
test_name: GET /vulnerability/{agent_id}/last_scan

stages:

  - name: Try to get when the last full and partial scans for agent 001 ended
    request:
      verify: False
      method: GET
      url: "{protocol:s}://{host:s}:{port:d}/vulnerability/001/last_scan"
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      <<: *permission_denied

  - name: Get when the last full and partial scans for agent 002 ended
    request:
      verify: False
      method: GET
      url: "{protocol:s}://{host:s}:{port:d}/vulnerability/002/last_scan"
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - last_full_scan: !anything
              last_partial_scan: !anystr
          failed_items: [ ]
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /vulnerability/{agent_id}/summary/severity

stages:

  - name: Try to get a summary of the vulnerabilities' severity of a given agent
    request:
      verify: False
      method: GET
      url: "{protocol:s}://{host:s}:{port:d}/vulnerability/001/summary/severity"
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      <<: *permission_denied

---
test_name: PUT /vulnerability

stages:

  - name: Try to run vulnerability detector scans
    request:
      verify: False
      method: PUT
      url: "{protocol:s}://{host:s}:{port:d}/vulnerability"
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      <<: *permission_denied
